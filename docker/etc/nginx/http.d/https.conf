# # HTTPS Server
# server {

#   listen 443 ssl http2;
#   listen [::]:443 ssl http2;
#   server_name _;

#   ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
#   ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;
#   ssl_certificate /etc/nginx/cert/website.crt;
#   ssl_certificate_key /etc/nginx/cert/website.key;

#   set $realip $remote_addr;
#   if ($http_x_forwarded_for ~ ^(\d+\.\d+\.\d+\.\d+)) {
#     set $realip $1;
#   }
#   if ($http_x_real_ip ~* ^\d+\.\d+\.\d+\.\d+) {
#     set $realip $http_x_real_ip;
#   }
#   proxy_set_header X-Real-IP $realip;
#   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#   # location ~ .*/proxy_server/.* {
#   #   proxy_cache cachei;
#   #   proxy_cache_revalidate on;
#   #   proxy_cache_min_uses 5;
#   #   proxy_cache_lock on;
#   #   proxy_cache_lock_timeout 5s;
#   #   proxy_cache_use_stale updating error timeout invalid_header http_500 http_502;
#   #   proxy_http_version 1.1;
#   # }

#   location ^~ /app1/ { # Set default file in SPA
#     try_files $uri $uri/ /app1/index.html =404;
#   }

#   location ^~ /app1/api/ { # Use cluster
#     proxy_pass http://app-cluster/;
#   }

#   location ^~ /app2/ { # Use server
#     proxy_pass http://app-nginx:80/;
#   }

# }
